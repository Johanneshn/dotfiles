:set relativenumber
:set number 
"" Source your .vimrc
"source ~/.vimrc

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq
imap jk <Esc>

map <Space> <Nop>
map <space> <nop>
let mapleader=" "


" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'

" clear search highlighting
nmap <leader>/ :nohls<return><esc>
" code navigation
" https://youtrack.jetbrains.com/issue/VIM-44

nmap <C-o> :action Back<cr>
nmap <C-i> :action Forward<cr>
nmap <C-l> :action NextTab<CR>
nmap <C-h> :action PreviousTab<CR>

nmap <leader>f :action GotoFile<CR>
nmap <leader>a :action FindInPath<CR>

"nnoremap <leader>s :action GotoRelated<CR>
"nnoremap <leader>h :action CallHierarchy<CR>
"nnoremap <leader>b :action ShowNavBar<CR>
"nnoremap <c-s>  :action FileStructurePopup<CR>
" nnoremap <c-o> :action GotoSymbol<CR>
nnoremap gc :action GotoClass<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gd :action GotoDeclaration<CR>
" This will remap the key combination g+h to open the quick docs.
nnoremap gh :action QuickJavaDoc<cr>
nnoremap gr :action ShowUsages<CR>
nnoremap <leader>u :action FindUsages<CR>
"nnoremap gs :action GotoSuperMethod<CR>
nnoremap ge :action ShowErrorDescription<cr>
" nnoremap gp :action GotToSuperMethod<CR>
nnoremap gt :action GotoTest<CR>
nnoremap gb :action Back<CR>
nnoremap gf :action Forward<CR>

" Map <leader>b to the Build action.
nmap <leader>b <Action>(BuildWholeSolution)
"nmap <leader>b <Action>(BuildWholeSolutionAction)
" Map <leader>h to open quick definition
nmap <leader>h <Action>(QuickImplementations)
" Map \r to the Reformat Code action
map <leader><leader>r <Action>(ReformatCode)
"" Map <leader>d to start debug
map <leader>d <Action>(Debug)


nmap <leader>c <Action>(CloseContent)
"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)
